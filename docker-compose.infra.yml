version: "3"
services:
  ## zookeeper
  zookeeper:
    image: "bitnami/zookeeper:3.7.2"
    container_name: zookeeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./.data/zookeeper/data:/bitnami/zookeeper/data
      - ./.data/zookeeper/datalog:/bitnami/zookeeper/datalog
      - ./.data/zookeeper/logs:/bitnami/zookeeper/logs
    networks:
      - kafka_network
  ## kafka1
  kafka1:
    image: "bitnami/kafka:3.6.0"
    container_name: kafka1
    hostname: kafka1
    ports:
      - 19092
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka1:19092,EXTERNAL://43.201.213.254:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka1:/bitnami/kafka/data
    networks:
      - kafka_network
  ## kafka2
  kafka2:
    image: "bitnami/kafka:3.6.0"
    container_name: kafka2
    ports:
      - 19092
      - "9093:9093"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka2:19092,EXTERNAL://43.201.213.254:9093
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka2:/bitnami/kafka/data
    networks:
      - kafka_network
  ## kafka3
  kafka3:
    image: "bitnami/kafka:3.6.0"
    container_name: kafka3
    ports:
      - 19092
      - "9094:9094"
    environment:
      - KAFKA_BROKER_ID=3
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:19092,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka3:19092,EXTERNAL://43.201.213.254:9094
      - KAFKA_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./.data/kafka3:/bitnami/kafka/data
    networks:
      - kafka_network
  ## kafka-ui tool
  kafka-ui:
    image: "provectuslabs/kafka-ui:v0.7.1"
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME=mysql-sink-connector
      - KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS=http://kafka-connect:8083
      - KAFKA_CLUSTERS_1_KAFKACONNECT_1_NAME=mysql-source-connector
      - KAFKA_CLUSTERS_1_KAFKACONNECT_1_ADDRESS=http://kafka-connect:8083
    depends_on:
      - zookeeper
      - kafka1
      - kafka2
      - kafka3
      - kafka-connect
    networks:
      - kafka_network
  ## mysql
  mysql:
    image: "mysql:8.0.35"
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=1234
      - MYSQL_DATABASE=users
      - MYSQL_USER=dobby
      - MYSQL_PASSWORD=1234
    volumes:
      - mysql-volume:/var/lib/mysql
    networks:
      kafka_network:
        ipv4_address: 172.20.0.5
  ## kafka-connect
  kafka-connect:
    image: "confluentinc/cp-kafka-connect:latest"
    container_name: kafka-mysql-connect
    ## JDBC Connector 설치
    command: |
      bash -c '
        echo "Installing connector plugins"
        confluent-hub install --no-prompt confluentinc/kafka-connect-jdbc:latest
        #
        echo "Launching Kafka Connect worker"
        /etc/confluent/docker/run
      '
    ports:
      - "8083:8083"
    environment:
      - CONNECT_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
      - CONNECT_REST_PORT=8083
      - CONNECT_GROUP_ID=kafka-connect-group
      - CONNECT_CONFIG_STORAGE_TOPIC=connect-configs
      - CONNECT_OFFSET_STORAGE_TOPIC=connect-offsets
      - CONNECT_STATUS_STORAGE_TOPIC=connect-status
      - CONNECT_KEY_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_VALUE_CONVERTER=org.apache.kafka.connect.storage.StringConverter
      - CONNECT_INTERNAL_KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_INTERNAL_VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - CONNECT_REST_ADVERTISED_HOST_NAME=kafka-connect
      - CONNECT_LOG4J_ROOT_LOGLEVEL=INFO
      - CONNECT_PLUGIN_PATH=/usr/share/java,/usr/share/confluent-hub-components
    volumes:
      - ./kafka-connect/mysql-sink-config.json:/kafka-connect/mysql-sink-config.json
      - ./kafka-connect/mysql-source-config.json:/kafka-connect/mysql-source-config.json
    depends_on:
      - kafka1
      - kafka2
      - kafka3
      - mysql
    networks:
      kafka_network:
        ipv4_address: 172.20.0.10
  ## schema-registry
  schema-registry:
    image: confluentinc/cp-schema-registry:latest
    container_name: schema-registry
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8088:8081"
    environment:
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=kafka1:19092,kafka2:19092,kafka3:19092
    networks:
      kafka_network:
        ipv4_address: 172.20.0.11

volumes:
  mysql-volume:

networks:
  kafka_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
