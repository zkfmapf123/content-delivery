version: "3"

services:
  ## content api
  content:
    build:
      context: ./server
      dockerfile: Dockerfile.content
    container_name: content
    environment:
      - BROKERS=43.201.213.254:9092,43.201.213.254:9093,43.201.213.254:9094
      - TOPIC=user_original
      - SERVER_NAME=Content-api
      - VERSION=1.0.0
      - PORT=3000
      - EXTERNAL_HOST=external-api
    ports:
      - 3001:3000
    networks:
      content-network:
        ipv4_address: 172.21.0.10
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "172.21.0.12:24224"
        fluentd-async: "true"
        tag: "{{.Name}}"
        env: "prd"
    depends_on:
      - fluentbit
  ## external-api
  consumer:
    build:
      context: ./server
      dockerfile: Dockerfile.consumer
    container_name: consumer
    environment:
      - PORT=3000
      - KAFKA_TOPICS=user_original
      - KAFKA_CONSUMER_GROUP=consumer
      - KAFKA_BROKERS=43.201.213.254:9092,43.201.213.254:9093,43.201.213.254:9094
    ports:
      - 3002:3000
    networks:
      content-network:
        ipv4_address: 172.21.0.11
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "172.21.0.12:24224"
        fluentd-async: "true"
        tag: "{{.Name}}"
        env: "prd"
    depends_on:
      - fluentbit
  ## fluentbit
  fluentbit:
    image: fluent/fluent-bit:2.0.10
    container_name: fluentbit
    volumes:
      - ./config/fluentbit.conf:/fluent-bit/etc/fluent-bit.conf
      - ./logs:/logs
    ports:
      - "24224:24224"
      - "2020:2020"
    user: "0"
    networks:
      content-network:
        ipv4_address: 172.21.0.12
  ## promethues
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      content-network:
        ipv4_address: 172.21.0.13
  ## loki
  loki:
    image: grafana/loki:latest
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      content-network:
        ipv4_address: 172.21.0.14
  ## grafana
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    networks:
      content-network:
        ipv4_address: 172.21.0.15
    depends_on:
      - loki
      - prometheus
networks:
  content-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.21.0.0/24
